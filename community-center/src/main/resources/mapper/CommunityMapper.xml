<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cms.community.dao.CommunityDao">
  <resultMap id="BaseResultMap" type="com.cms.common.entity.Community">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="catalog_id" jdbcType="TINYINT" property="catalogId" />
    <result column="history_num" jdbcType="INTEGER" property="historyNum" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>

  <resultMap id="SquareResultMap" type="com.cms.common.vo.community.CommunitySquareVo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="catalog_name" jdbcType="VARCHAR" property="catalogName" />
    <result column="history_num" jdbcType="INTEGER" property="historyNum" />
    <result column="president" jdbcType="VARCHAR" property="president" />
  </resultMap>

  <resultMap id="DetailsMap" type="com.cms.common.vo.community.CommunityDetailsVo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="catalog_name" jdbcType="VARCHAR" property="catalogName" />
    <result column="history_num" jdbcType="INTEGER" property="historyNum" />
    <result column="president" jdbcType="VARCHAR" property="president" />
    <result column="description" jdbcType="VARCHAR" property="description"/>
    <result column="member_count" jdbcType="INTEGER" property="memberCount"/>
  </resultMap>

  <resultMap id="MyCommunityMap" type="com.cms.common.vo.community.MyCommunityVo">
    <result column="id" jdbcType="INTEGER" property="id"/>
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="createDate"/>
  </resultMap>

  <resultMap id="MemberInfoMap" type="com.cms.common.vo.community.CommunityMemberInfoVo">
    <result column="real_name" jdbcType="VARCHAR" property="realName"/>
    <result column="user_num" jdbcType="BIGINT" property="userNum"/>
    <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
    <result column="college" jdbcType="VARCHAR" property="college"/>
    <result column="major" jdbcType="VARCHAR" property="major"/>
    <result column="classNum" jdbcType="INTEGER" property="classNum"/>
  </resultMap>


  <sql id="querySQL">
    <where>
      <if test="id != null">
        AND id = #{id}
      </if>
      <if test="name != null">
        AND `name` = #{name}
      </if>
      <if test="catalogId != null">
        AND catalog_id = #{catalogId}
      </if>
      <if test="historyNum != null">
        AND history_num = #{historyNum}
      </if>
      <if test="description != null">
        AND description = #{description}
      </if>
    </where>
  </sql>


  <sql id="Base_Column_List">
    id, gmt_create, gmt_modified, `name`, catalog_id, history_num, description
  </sql>
  <sql id="table_name">
    tb_community
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_community
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_community
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.cms.common.entity.Community" useGeneratedKeys="true">
    insert into tb_community (gmt_create, gmt_modifed, `name`, 
      catalog_id, description)
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, 
      #{catalogId,jdbcType=TINYINT}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.cms.common.entity.Community" useGeneratedKeys="true">
    insert into tb_community
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modifed,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="catalogId != null">
        catalog_id,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="catalogId != null">
        #{catalogId,jdbcType=TINYINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cms.common.entity.Community">
    update tb_community
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.cms.common.entity.Community">
    update tb_community
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modifed = #{gmtModified,jdbcType=TIMESTAMP},
      `name` = #{name,jdbcType=VARCHAR},
      catalog_id = #{catalogId,jdbcType=TINYINT},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getSquareList" resultType="com.cms.common.vo.community.CommunitySquareVo" resultMap="SquareResultMap">
    SELECT ct.id, ct.name, catalog_name, ct.history_num, ct.gmt_create, community_president.real_name as 'president'
    FROM tb_community ct
    LEFT JOIN community_catalog ON ct.catalog_id=community_catalog.id
    LEFT JOIN (select community_id, real_name from user_community uc, tb_user u where role_id=1 and u.id=uc.user_id) community_president ON community_president.community_id=ct.id
  </select>

  <select id="count" resultType="integer">
    SELECT count(*) FROM <include refid="table_name"></include>
  </select>

  <select id="detailsInfo" parameterType="integer" resultType="com.cms.common.vo.community.CommunityDetailsVo" resultMap="DetailsMap">
	SELECT ct.id, ct.name, catalog_name, ct.history_num, ct.gmt_create, community_president.real_name as 'president', ct.description as 'description', member_count
    FROM tb_community ct
    LEFT JOIN community_catalog ON ct.catalog_id=community_catalog.id
    LEFT JOIN (select community_id, real_name from user_community uc, tb_user u where role_id=1 and u.id=uc.user_id) community_president ON community_president.community_id=ct.id
	LEFT JOIN (select community_id, count(*) as member_count from user_community group by community_id) ucc on ucc.community_id=ct.id
    where ct.id=#{id}
  </select>


  <select id="getCommunityByUserId" parameterType="string" resultType="com.cms.common.vo.community.MyCommunityVo" resultMap="MyCommunityMap">
    SELECT  c.id, name, role_name, uc.gmt_create
    FROM tb_community c, tb_role r, user_community uc, tb_user u
    WHERE uc.role_id=r.id AND uc.community_id=c.id AND uc.user_id=u.id AND u.user_id=#{userId}
  </select>

  <select id="query" parameterType="com.cms.common.query.CommunityQuery" resultType="com.cms.common.entity.Community" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/>
    FROM tb_community <include refid="querySQL"/>
  </select>

  <select id="memberShip" resultType="integer">
    SELECT role_id FROM user_community where user_id=#{userId} and community_id=#{communityId}
  </select>

  <insert id="member">
    INSERT INTO user_community
    (user_id, community_id, role_id) values (#{userId}, #{communityId}, #{roleId})
  </insert>

  <update id="addHistoryNum" parameterType="integer">
    UPDATE tb_community
    set history_num = history_num + 1
    WHERE id = #{communityId}
  </update>


  <select id="communityMember" parameterType="integer" resultType="com.cms.common.vo.community.CommunityMemberInfoVo" resultMap="MemberInfoMap">
    select u.real_name, u.user_num, role_name, u.college, u.grade, u.major, u.classNum
    from user_community uc, tb_user u, tb_role r
    where uc.user_id=u.id and uc.community_id = #{communityId} and uc.role_id=r.id order by uc.role_id
  </select>

  <update id="roleChange">
    update user_community set
    role_id = #{roleId}
    where community_id = #{communityId} and user_id = #{userId}
  </update>

  <delete id="memberDelete">
    delete from user_community where user_id = #{userId} and community_id = #{communityId}
  </delete>

  <select id="candidate" resultType="long">
    select user_id from user_community
    where community_id = #{communityId}
    and user_id != #{userId}
    order by role_id asc
    limit 1
  </select>
</mapper>